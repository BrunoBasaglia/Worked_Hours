// <auto-generated />
using System;
using Clock.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Clock.Infra.Migrations
{
    [DbContext(typeof(ClockContext))]
    partial class ClockContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Clock.Domain.Entities.City", b =>
                {
                    b.Property<int>("IdCity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateFk")
                        .HasColumnType("int");

                    b.HasKey("IdCity");

                    b.HasIndex("StateFk");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            IdCity = 1,
                            Name = "Adelaide",
                            StateFk = 1
                        },
                        new
                        {
                            IdCity = 2,
                            Name = "Perth",
                            StateFk = 8
                        },
                        new
                        {
                            IdCity = 3,
                            Name = "Mandurah",
                            StateFk = 8
                        },
                        new
                        {
                            IdCity = 4,
                            Name = "Bunbury",
                            StateFk = 8
                        },
                        new
                        {
                            IdCity = 5,
                            Name = "Geraldton",
                            StateFk = 8
                        },
                        new
                        {
                            IdCity = 6,
                            Name = "Kalgoorlie-Boulder",
                            StateFk = 8
                        },
                        new
                        {
                            IdCity = 7,
                            Name = "Sydney",
                            StateFk = 2
                        },
                        new
                        {
                            IdCity = 8,
                            Name = "Newcastle",
                            StateFk = 2
                        },
                        new
                        {
                            IdCity = 9,
                            Name = "Wollongong",
                            StateFk = 2
                        },
                        new
                        {
                            IdCity = 10,
                            Name = "Wagga Wagga",
                            StateFk = 2
                        },
                        new
                        {
                            IdCity = 11,
                            Name = "Coffs Harbour",
                            StateFk = 2
                        },
                        new
                        {
                            IdCity = 12,
                            Name = "Tamworth",
                            StateFk = 2
                        },
                        new
                        {
                            IdCity = 13,
                            Name = "Port Macquarie",
                            StateFk = 2
                        },
                        new
                        {
                            IdCity = 14,
                            Name = "Orange",
                            StateFk = 2
                        },
                        new
                        {
                            IdCity = 15,
                            Name = "Dubbo",
                            StateFk = 2
                        },
                        new
                        {
                            IdCity = 16,
                            Name = "Nowra-Bomaderry",
                            StateFk = 2
                        },
                        new
                        {
                            IdCity = 17,
                            Name = "Bathurst",
                            StateFk = 2
                        },
                        new
                        {
                            IdCity = 18,
                            Name = "Lismore",
                            StateFk = 2
                        },
                        new
                        {
                            IdCity = 19,
                            Name = "Albury-Wodonga",
                            StateFk = 2
                        },
                        new
                        {
                            IdCity = 20,
                            Name = "Brisbane",
                            StateFk = 3
                        },
                        new
                        {
                            IdCity = 21,
                            Name = "Sunshine Coast",
                            StateFk = 3
                        },
                        new
                        {
                            IdCity = 22,
                            Name = "Townsville",
                            StateFk = 3
                        },
                        new
                        {
                            IdCity = 23,
                            Name = "Cairns",
                            StateFk = 3
                        },
                        new
                        {
                            IdCity = 24,
                            Name = "Toowoomba",
                            StateFk = 3
                        },
                        new
                        {
                            IdCity = 25,
                            Name = "Mackay",
                            StateFk = 3
                        },
                        new
                        {
                            IdCity = 26,
                            Name = "Rockhampton",
                            StateFk = 3
                        },
                        new
                        {
                            IdCity = 27,
                            Name = "Bundaberg",
                            StateFk = 3
                        },
                        new
                        {
                            IdCity = 30,
                            Name = "Hervey Bay",
                            StateFk = 3
                        },
                        new
                        {
                            IdCity = 31,
                            Name = "Gladstone	",
                            StateFk = 3
                        },
                        new
                        {
                            IdCity = 32,
                            Name = "Gold Coast-Tweed Heads",
                            StateFk = 3
                        },
                        new
                        {
                            IdCity = 33,
                            Name = "Hobart",
                            StateFk = 6
                        },
                        new
                        {
                            IdCity = 34,
                            Name = "Launceston",
                            StateFk = 6
                        },
                        new
                        {
                            IdCity = 35,
                            Name = "Burnie-Devonport",
                            StateFk = 6
                        },
                        new
                        {
                            IdCity = 36,
                            Name = "Camberra-Queanbeyan",
                            StateFk = 7
                        },
                        new
                        {
                            IdCity = 37,
                            Name = "Darwin",
                            StateFk = 4
                        },
                        new
                        {
                            IdCity = 38,
                            Name = "Melbourne",
                            StateFk = 5
                        },
                        new
                        {
                            IdCity = 39,
                            Name = "Geelong",
                            StateFk = 5
                        },
                        new
                        {
                            IdCity = 40,
                            Name = "Ballarat",
                            StateFk = 5
                        },
                        new
                        {
                            IdCity = 41,
                            Name = "Bendigo",
                            StateFk = 5
                        },
                        new
                        {
                            IdCity = 42,
                            Name = "La Trobe Valley",
                            StateFk = 5
                        },
                        new
                        {
                            IdCity = 43,
                            Name = "Mildura",
                            StateFk = 5
                        },
                        new
                        {
                            IdCity = 44,
                            Name = "Shepparton",
                            StateFk = 5
                        },
                        new
                        {
                            IdCity = 45,
                            Name = "Warrnambool",
                            StateFk = 5
                        },
                        new
                        {
                            IdCity = 9999,
                            Name = "Not Informed",
                            StateFk = 9999
                        });
                });

            modelBuilder.Entity("Clock.Domain.Entities.Client", b =>
                {
                    b.Property<string>("IdClient")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityFk")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FrequencyFK")
                        .HasColumnType("int");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("IdClient");

                    b.HasIndex("CityFk");

                    b.HasIndex("FrequencyFK");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Clock.Domain.Entities.Employer", b =>
                {
                    b.Property<string>("IdEmployer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("ABN")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityFk")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("PayBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PayDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentFrequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<string>("Suburb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telephone")
                        .HasColumnType("int");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("IdEmployer");

                    b.HasIndex("CityFk");

                    b.ToTable("Employer");
                });

            modelBuilder.Entity("Clock.Domain.Entities.Frequency", b =>
                {
                    b.Property<int>("IdFrequency")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFrequency");

                    b.ToTable("Frequency");

                    b.HasData(
                        new
                        {
                            IdFrequency = 1,
                            Description = "Weekly"
                        },
                        new
                        {
                            IdFrequency = 2,
                            Description = "Fortnightly"
                        },
                        new
                        {
                            IdFrequency = 3,
                            Description = "Monthly"
                        },
                        new
                        {
                            IdFrequency = 4,
                            Description = "One Off"
                        },
                        new
                        {
                            IdFrequency = 5,
                            Description = "Exit Clean"
                        },
                        new
                        {
                            IdFrequency = 9999,
                            Description = "Not Informed"
                        });
                });

            modelBuilder.Entity("Clock.Domain.Entities.Hours", b =>
                {
                    b.Property<int>("IdHour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployerFk")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Finish")
                        .HasColumnType("datetime2");

                    b.Property<double>("Hour")
                        .HasColumnType("float");

                    b.Property<string>("PersonFk")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.HasKey("IdHour");

                    b.HasIndex("EmployerFk");

                    b.HasIndex("PersonFk");

                    b.ToTable("Hours");
                });

            modelBuilder.Entity("Clock.Domain.Entities.Person", b =>
                {
                    b.Property<string>("IdPerson")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("ABN")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityFk")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Function")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Suburb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Wages")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("IdPerson");

                    b.HasIndex("CityFk");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Clock.Domain.Entities.PersonEmployer", b =>
                {
                    b.Property<string>("IdPerson")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdEmployer")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdPerson", "IdEmployer");

                    b.HasIndex("IdEmployer");

                    b.ToTable("PersonEmployer");
                });

            modelBuilder.Entity("Clock.Domain.Entities.State", b =>
                {
                    b.Property<int>("IdState")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdState");

                    b.ToTable("State");

                    b.HasData(
                        new
                        {
                            IdState = 1,
                            Code = "SA",
                            Name = "South Australia"
                        },
                        new
                        {
                            IdState = 2,
                            Code = "NSW",
                            Name = "New South Wales"
                        },
                        new
                        {
                            IdState = 3,
                            Code = "QLD",
                            Name = "Queensland"
                        },
                        new
                        {
                            IdState = 4,
                            Code = "NT",
                            Name = "Northern Territory"
                        },
                        new
                        {
                            IdState = 5,
                            Code = "VIC",
                            Name = "Victoria"
                        },
                        new
                        {
                            IdState = 6,
                            Code = "TAS",
                            Name = "Tasmania"
                        },
                        new
                        {
                            IdState = 7,
                            Code = "ACT",
                            Name = "Australia Capital Territory"
                        },
                        new
                        {
                            IdState = 8,
                            Code = "WA",
                            Name = "Western Australia"
                        },
                        new
                        {
                            IdState = 9999,
                            Code = "N/A",
                            Name = "Not Informed"
                        });
                });

            modelBuilder.Entity("Clock.Domain.Entities.City", b =>
                {
                    b.HasOne("Clock.Domain.Entities.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateFk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Clock.Domain.Entities.Client", b =>
                {
                    b.HasOne("Clock.Domain.Entities.City", "City")
                        .WithMany("Clients")
                        .HasForeignKey("CityFk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Clock.Domain.Entities.Frequency", "Frequency")
                        .WithMany("Clients")
                        .HasForeignKey("FrequencyFK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Clock.Domain.Entities.Employer", b =>
                {
                    b.HasOne("Clock.Domain.Entities.City", "City")
                        .WithMany("Employers")
                        .HasForeignKey("CityFk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Clock.Domain.Entities.Hours", b =>
                {
                    b.HasOne("Clock.Domain.Entities.Employer", "Employer")
                        .WithMany("Hours")
                        .HasForeignKey("EmployerFk")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Clock.Domain.Entities.Person", "Person")
                        .WithMany("Hours")
                        .HasForeignKey("PersonFk")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Clock.Domain.Entities.Person", b =>
                {
                    b.HasOne("Clock.Domain.Entities.City", "City")
                        .WithMany("People")
                        .HasForeignKey("CityFk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Clock.Domain.Entities.PersonEmployer", b =>
                {
                    b.HasOne("Clock.Domain.Entities.Employer", "Employer")
                        .WithMany("PersonEmployer")
                        .HasForeignKey("IdEmployer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clock.Domain.Entities.Person", "Person")
                        .WithMany("PersonEmployer")
                        .HasForeignKey("IdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
